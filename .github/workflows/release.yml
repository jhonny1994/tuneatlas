name: Debug Build

on:
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.35.3"
  JAVA_VERSION: "17"

jobs:
  # Code quality checks
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run code generation
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Analyze code
        run: flutter analyze

      - name: Check formatting
        run: dart format --set-exit-if-changed .

  # Build Android APK (Debug)
  build-android:
    name: Build Android Debug
    runs-on: ubuntu-latest
    needs: analyze

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: "gradle"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Run code generation
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Build APK
        run: flutter build apk --debug

      - name: Get version from pubspec
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version $VERSION"

      - name: Rename APK
        run: |
          cd build/app/outputs/flutter-apk
          mv app-debug.apk TuneAtlas-v${{ steps.version.outputs.version }}-debug.apk

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/TuneAtlas-*.apk
          retention-days: 30

      - name: Create Debug Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/TuneAtlas-*.apk"
          tag: v${{ steps.version.outputs.version }}-debug-build.${{ github.run_number }}
          name: "TuneAtlas v${{ steps.version.outputs.version }} (Debug Build ${{ github.run_number }})"
          body: |
            ## 🎵 TuneAtlas v${{ steps.version.outputs.version }} - Debug Build

            **Build:** ${{ github.run_number }}  
            **Commit:** ${{ github.sha }}
            **Type:** Debug (For testing only)

            ### ⚠️ Debug Build
            This is a debug build for testing purposes. Use the production release for actual deployment.

            ### 🚀 Installation
            1. Download the APK
            2. Enable "Install from Unknown Sources" in Settings
            3. Install and test

            ### 📝 Changes
            See commit history for details.
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          prerelease: true
          allowUpdates: true
          makeLatest: false
