name: Build and Release

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  # Manual trigger option
  workflow_dispatch:

jobs:
  # Job 1: Test & Analyze
  test:
    name: Run Tests & Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Get dependencies
        run: flutter pub get

      - name: Verify Flutter
        run: flutter --version

      - name: Analyze code
        run: flutter analyze

  # Job 2: Build Android APK
  build-android:
    name: Build Android APK
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Get dependencies
        run: flutter pub get

      - name: Clean build
        run: flutter clean

      - name: Build APK (Release)
        run: flutter build apk --release

      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk \
             build/app/outputs/flutter-apk/TuneAtlas-${{ github.run_number }}.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: tuneatlas-apk
          path: build/app/outputs/flutter-apk/TuneAtlas-*.apk

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/TuneAtlas-*.apk"
          tag: v1.0.${{ github.run_number }}
          name: "TuneAtlas v1.0.${{ github.run_number }}"
          body: |
            ## TuneAtlas Release v1.0.${{ github.run_number }}

            ### What's New
            - Automatic build from commit ${{ github.sha }}
            - Build number: ${{ github.run_number }}

            ### Download
            - [TuneAtlas APK](https://github.com/${{ github.repository }}/releases/download/v1.0.${{ github.run_number }}/TuneAtlas-${{ github.run_number }}.apk)

            ### Installation
            1. Download the APK
            2. Enable "Install from Unknown Sources" on your Android device
            3. Install and enjoy!
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
